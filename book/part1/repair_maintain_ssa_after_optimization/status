I liked the chapter especially the layout (starting with some examples is good).

I am pretty convinced that we can make a very good chapter that somehow closes the problem: as I explain in my review the important thing is to be able to list the set of variables that might have been impacted by the transformation. Either the client can provide it accurately; this is the best situation. Or maybe the client can only provide some BB that are impacted; the IR can then deduce from this a set of impacted variables. The "worth" situation is when the client knows nothing. In this last case, sophisticated technique have to be used to know which BB may have been impacted (similar to techniques for updating the dom tree).
We can finally mention the technique that corresponds to put some phi functions around a modified region to restrict the update to that region.

One important point that will really simplify your pseudo codes: you should consider that the client provides after his transformation a correct code. non SSA but correct. So you can consider one variable at a time as opposed to i2, i3 in your example.
Of course you can outline that your pseudo code is provided for one variable at a time but can easily be modified to treat several at the same time. It would probably behave better (avoid many traversals of the CFG with indirections to go from one BB to another).

I would like an example to illustrate algo 2 & 3.

blue are personnal notes (summary of the paragraph). red are corrections. yellow are notions shared with other chapters. I may have forgot some. This is important for the index of the book and for cross references between chapters.