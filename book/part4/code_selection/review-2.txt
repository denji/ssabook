TOBE FIXED:
- why do you say that tree partern matching is restricted to single statement??? It is restricted to a straightline code where each variable is used only once. For straighline code, if you have several uses for one variable, there exists heuristics that try to use a similar approach, the problem being NP-complete in that case (simple reduction to 3-exact cover).

- Don't you need a terminal rule for phi? Indeed, you need one to propagate the type of non-terminals through it.

- "A traversal over the basic blocks using the SSA graph is
sufficient to execute the associated semantic rules in order to emit the code." I do not find it so simple. How do you do if a patern covers instructions that are in different basic blocks?? Do you forbid this to happen? If yes how?

- "there exists a topological order that respects the partial order defined by edges in the SSA graph". I think you mean the SSA graph without phi-functions here. Indeed, as far as I understood you have PHI terminal rules with only "actual" non-terminal symbols; a phi cannot be merged with any actual code instruction. So phi can be ommited for emmiting the code. If you remove phi, then the SSA graph is acyclic... This has to be explained at some points as otherwise this sentence does not make any sens. 

- fig 1.4 & 1.6 don't use the same notation for the cost of a terminal rule. Could you use the same? Also could you put in bold a possible solution in fig 1.6. This is really useful.
