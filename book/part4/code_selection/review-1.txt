Mail du 14 juillet 2010:
Dear Dietmar,

Following your last email, I spent some time reading more carefully the chapter. I have suggestions to shorten it. If I did not make myself clear, please do not hesitate to ask me. Most of the time I would replace long explanations by an example.

- the introduction is too long. The reader should already know what instruction selection is.
- is RTL description required? Currently it is not descriptive enough to understand what is performed. We do not understand why it is restricted to simple patterns. If you want to keep it, you can remove Algo 1 and describe it without using any notion that are not well known such as effect etc.
- tree pattern matching is also well known. You can shorten it (add a reference to a compiler book) and remove the example.
- you can remove the motivating example. The fact that conceptually the DAG code selection is not "optimal" is clear. You do not need to show any SSA graph (you can refer to the corresponding chapter). Just outline that it contains circuits.
- The less notations you use, the better it is. eg. the normalization can be illustrated on the example. That is enough. Still outline the use of t1 that allows you to "link" the rules.
- You do not need to provide real examples. Make examples as simple/small as possible (the minimum size to illustrate the concepts you need to describe). What do you think of using a generic example with only a 3-nodes graph? It would allow you to provide for the example the corresponding PBQP program.
- you can remove 3.2 & 3.3. In a last section you can summaries different approaches to solve BPQP and provide appropriated references. If you think that there are no good references for this than at least shift it to the end in a more technical section (this is not a requirement to understand the technique).
- section 5.1. The autoincrement example is enough, you do not need to list other instructions/architectures.
- Note that I would prefer to see references to existing tools at the end of the chapter.
- Finally, I do not know how it could be improved but the section 5 (which is the most important part) is difficult to understand. Maybe the explanation how the code is emitted is missing.


>- drop/shorten discussion of related work and how SSA based isel >compares to it.
The discussion on DAG is fine. The end of 1.2 is important.
>- drop/shorten the motivating example
YES
>- scratch PBQP-based instruction selection only on the surface >concentrating on the main approach and the main advantages.
Not clear what you mean exactly. But this is important to explain how you handle generalized patterns and how you generate the code (in addition to the PBQP formulation of course). Most of the time, giving the result on an example is sufficient compared to a general explanation (as in page 13 for example).
