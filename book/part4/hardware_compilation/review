See the chapter-annotated.pdf file for annotations.
This should tell you what was not clear for me and what should be clarified.
My main concern for the beginning of the chapter is the very verbose style.
Otherwise this is very interesting chapter. 
Sometimes it would be nice to explain how the technique you describe is related to SSA (how SSA do help for it).

CDG clearly needs to be described somewhere (not the construction but the graph and its properties itself).

Whenever an annotation is not clear to you, please contact me to discuss about it. Also I would like to be informed about which modification have been taken into account, what changes have been done. 

Finally it would be helpful to describe more precisely how things are implemented: for me a circuit is nothing else than transistors and a wire is either on the 1 or 0 state. So how the synchronization is handled; is an operator always compute a value (even if the inputs are not valid) or is there any control; etc. See my questions on the annotated file. 

A description how some graphs (such as the DFG) is related to hardware synthesis would be interesting. This is not SSA, but somehow this is related as we will try to explain in the SSI chapter (SSA is the poorest form amoung forms that enforce some path properties).

Old remark:
If not already done, it would be interesting to have an overview of different kind of circuit synthesis (what are the constraints). Then give also an overview of different program representation variants (properties that it provides).